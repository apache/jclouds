<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>jclouds-project</artifactId>
    <groupId>org.apache.jclouds</groupId>
    <version>2.3.0-SNAPSHOT</version>
    <relativePath>../project/pom.xml</relativePath>
  </parent>

  <artifactId>jclouds-gson-modules</artifactId>
  <name>jclouds gson modules</name>
  <packaging>pom</packaging>

  <!--
    The maven-bundle-plugin computes the manifest based on the classes that actually exist in
    the classpath, but the maven-shade-plugin, runs after the bundle plugin. This results in the generated
    manifest file not having the exports for the packages that have been relocated.
    There are several threads on stackoverflow and others trying to make both plugins work together nicely but
    none of the combinations work in our use case.
    To overcome this, we generate both separately; first the shaded jar, then the bundle based on that jar. 
  -->
  <modules>
    <module>gson-shaded</module>
    <module>gson-bundle</module>
  </modules>

</project>
